{"version":3,"sources":["helper/auth.js","components/Signin/SignIn.jsx","components/navbar/navbar.jsx","components/simpleCard/SimpleCard.jsx","Screens/home/home.jsx","components/testwidget/testwidget.jsx","components/testNavbar/TestNavbar.jsx","Screens/test/test.jsx","Screens/contribute/Contribute.jsx","components/showQuestionModel/QuestionModel.jsx","Screens/reports/Report.jsx","components/Signup/SignUp.jsx","components/protectedRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["signin","data","axios","post","then","res","window","localStorage","setItem","JSON","stringify","authenticate","location","href","origin","catch","err","request","response","Title","Typography","SignIn","className","style","width","justify","md","span","name","onFinish","values","console","log","size","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","type","htmlType","block","fontSize","marginTop","to","Navbar","display","justifyContent","padding","alignItems","backgroundColor","flex","margin","paddingLeft","color","danger","UploadOutlined","PieChartOutlined","onClick","removeItem","reload","Meta","Card","SimpleCard","title","totalQuestion","rest","index","hoverable","cover","alt","src","description","Home","useState","topic","setTopic","modalData","setModalData","modalvisible","setModalvisible","testDuration","setTestDuration","Form","useForm","form","useEffect","get","e","error","map","i","idx","handleCardClick","visible","onOk","validateFields","userId","jwt_decode","parse","getItem","ACCESS_TOKEN","_id","test","onCancel","layout","label","min","defaultValue","format","onChange","time","timestamp","Option","Select","Testwidget","question","testData","setTestData","setIdx","lg","sm","questionImageLink","answerImageLink","expectedAnswer","selectChoices","value","length","TestNavbar","children","Test","testScreen","setTestScreen","submitTest","id","topicId","Waiting","height","textAlign","TestWidget","date","startTime","onComplete","marginLeft","Contribute","topicname","setTopicName","uploaded","setUploaded","ansuploaded","ansSetUploaded","correctAnswer","setcorrectChoice","selectTopic","setSelectTopic","questionRemove","file","key","originFileObj","start","indexOf","splice","params","fields","props","beforeUpload","formData","FormData","append","headers","success","onRemove","answerprops","showSearch","val","optionFilterProp","filterOption","input","option","toLowerCase","filterSort","optionA","optionB","localeCompare","icon","target","uploadedBy","pop","setTimeout","shape","QuestionModel","setQuestion","axiosRes","okButtonProps","disabled","Report","report","setReport","questionId","setQuestionId","search","q","jwtDecode","populate","axiosdata","reports","chartType","loader","incorrectAnswers","correctAnswers","options","rootProps","Input","TextArea","SignUp","onSubmit","SolutionOutlined","ProtectedRoute","Component","component","render","pathname","defaults","baseURL","common","App","path","exact","Signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mXA4BaA,EAAS,SAACC,GACrB,OAAOC,IACJC,KADI,SACWF,GACfG,MAAK,SAACC,IA7BiB,SAACJ,GACL,qBAAXK,QACTC,aAAaC,QAAQ,MAAOC,KAAKC,UAAUT,IA4BzCU,CAAaN,EAAIJ,MAEjBK,OAAOM,SAASC,KAAOP,OAAOM,SAASE,UAExCC,OAAM,SAACC,GACN,OAAIA,EAAIC,QACCD,EAAIC,QACFD,EAAIE,SACNF,EAAIE,SAEJF,MClCPG,EAAUC,IAAVD,MAwEOE,MAvEf,WAME,OACE,qBAAKC,UAAU,sBAAf,SACE,cAAC,IAAD,CAAKC,MAAO,CAAEC,MAAO,QAAUC,QAAQ,SAAvC,SACE,cAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,GAAjB,SACE,sBAAKL,UAAU,iBAAf,UACE,cAACH,EAAD,sBACA,cAAC,IAAD,IACA,eAAC,IAAD,CACES,KAAK,QACLN,UAAU,aACVO,SAfK,SAACC,GAChB9B,EAAO8B,GAAQ1B,MAAK,SAACH,GACnB8B,QAAQC,IAAI/B,OAcJgC,KAAK,QAJP,UAME,cAAC,IAAKC,KAAN,CACEN,KAAK,QACLO,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BALf,SASE,cAAC,IAAD,CACEC,OAAQ,cAACC,EAAA,EAAD,CAAcjB,UAAU,wBAChCkB,YAAY,YAGhB,cAAC,IAAKN,KAAN,CACEN,KAAK,WACLO,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCALf,SASE,cAAC,IAAD,CACEC,OAAQ,cAACG,EAAA,EAAD,CAAcnB,UAAU,wBAChCoB,KAAK,WACLF,YAAY,eAIhB,eAAC,IAAKN,KAAN,WACE,cAAC,IAAD,CACEQ,KAAK,UACLC,SAAS,SACTrB,UAAU,oBACVsB,OAAK,EAJP,qBAQA,oBAAGrB,MAAO,CAAEsB,SAAU,SAAUC,UAAW,OAA3C,wCAC6B,cAAC,IAAD,CAAMC,GAAG,UAAT,kBAD7B,mC,qDC9DHC,EAAS,WACpB,OACE,sBACEzB,MAAO,CACL0B,QAAS,OACTC,eAAgB,WAChBC,QAAS,UACTC,WAAY,SACZC,gBAAiB,WANrB,UASE,qBAAK/B,UAAU,OAAOC,MAAO,CAAE+B,KAAM,GAArC,SACE,cAAC,IAAD,CAAMP,GAAG,IAAT,SACE,mBACExB,MAAO,CACLgC,OAAQ,MACRC,YAAa,MACbX,SAAU,SACVY,MAAO,cALX,0BAYJ,cAAC,IAAD,CAAMV,GAAG,cAAT,SACE,eAAC,IAAD,CAAQL,KAAK,UAAUgB,QAAM,EAA7B,wBACa,cAACC,EAAA,EAAD,SAGf,cAAC,IAAD,CAAMZ,GAAG,UAAT,SACE,eAAC,IAAD,CAAQL,KAAK,UAAb,oBACS,cAACkB,EAAA,EAAD,SAGX,cAAC,IAAD,CAAQlB,KAAK,UAAUmB,QAAS,WAAKtD,aAAauD,WAAW,OAAQxD,OAAOM,SAASmD,UAArF,yB,kBCtCEC,EAASC,IAATD,KACKE,EAAa,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,cAAuBC,GAAW,EAApBC,MAAoB,kDAClE,OACI,mCACI,cAAC,IAAD,2BACID,GADJ,IAEIE,WAAS,EACThD,MAAO,CAAEC,MAAO,IAAIyB,QAAQ,eAAeM,OAAQ,QACnDiB,MAAO,qBAAKC,IAAI,UAAUC,IAAG,yEAJjC,SAMI,cAACV,EAAD,CAAMG,MAAOA,EAAOQ,YAAW,0BAAqBP,W,QCLvDQ,EAAO,WAAO,IAAD,EACEC,qBADF,mBACjBC,EADiB,KACVC,EADU,OAEUF,qBAFV,mBAEjBG,EAFiB,KAENC,EAFM,OAGgBJ,oBAAS,GAHzB,mBAGjBK,EAHiB,KAGHC,EAHG,OAIgBN,qBAJhB,mBAIjBO,EAJiB,KAIHC,EAJG,OAKTC,IAAKC,UAAbC,EALiB,oBAwExB,OAjEAC,qBAAU,WACRvF,IACGwF,IAAI,UACJtF,MAAK,SAACH,GAAD,OAAU8E,EAAS9E,EAAKA,SAC7Bc,OAAM,SAAC4E,GAAD,OAAOtD,IAAQuD,MAAM,oBAC7B,IA6DD,mCACE,sBAAKtE,UAAU,UAAf,UACE,cAAC,EAAD,IACCwD,GACCA,EAAMe,KAAI,SAACC,EAAGC,GAAJ,OACR,cAAC,EAAD,CACElC,QAAS,kBAjErB,SAAyBiC,GACvBb,EAAaa,GACbX,GAAgB,GA+DSa,CAAgBF,IAC/B3B,MAAO2B,EAAElE,KACT0C,MAAOyB,EACP3B,cAAc,UAGnBY,GAhEH,eAAC,IAAD,CACEb,MAAM,cACN8B,QAASf,EACTgB,KAAM,WACJV,EAAKW,iBAAiB/F,MAAK,SAAC0B,GAC1BA,EAAOsD,aAAeA,EAEtBtD,EAAOsE,OAASC,YACd5F,KAAK6F,MAAM/F,aAAagG,QAAQ,QAAQC,cACxCC,IACFvG,IACGC,KADH,uBACwB6E,EAAUyB,KAAO3E,GACtC1B,MAAK,SAACsG,GACLnG,aAAaC,QAAQ,OAAQC,KAAKC,UAAUgG,EAAKzG,OACjDM,aAAaC,QAAQ,cAAewE,EAAUyB,KAC9CnG,OAAOM,SAASC,KAAO,WAExBE,OAAM,SAAC4E,GAAD,OAAOtD,IAAQuD,MAAM,wCAGlCe,SAAU,WACRxB,GAAgB,IArBpB,UAwBE,gEAEA,8BAAG,2CAAH,MAAwBH,EAAUpD,QAClC,eAAC,IAAD,CAAM4D,KAAMA,EAAMoB,OAAO,WAAzB,UACE,cAAC,IAAK1E,KAAN,CACEN,KAAK,gBACLiF,MAAM,2BACN1E,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,yCANf,SAUE,cAAC,IAAD,CAAOK,KAAK,SAASoE,IAAK,EAAGC,aAAc,MAE7C,cAAC,IAAK7E,KAAN,CAAWN,KAAK,cAAciF,MAAM,WAApC,SACE,cAAC,IAAD,CACEG,OAAO,QACPC,SAAU,SAACC,EAAMC,GAAP,OAAqB9B,EAAgB8B,oB,kBCrErDC,EAAWC,IAAXD,OAEKE,EAAa,WAAO,IAaPC,EAbM,EACE1C,qBADF,mBACvB2C,EADuB,KACbC,EADa,OAER5C,mBAAS,GAFD,mBAEvBkB,EAFuB,KAElB2B,EAFkB,KAM9B,OAHAjC,qBAAU,WACRgC,EAAYhH,KAAK6F,MAAM/F,aAAagG,QAAQ,SAASrF,YACpD,IAED,mCACE,cAAC,IAAD,CAAKO,QAAQ,SAAb,SACE,cAAC,IAAD,CAAKE,KAAM,CAACgG,GAAG,GAAGC,GAAI,IAAtB,SAA4BJ,IAIVD,EAJqCC,EAASzB,GAMlE,qCACA,2CACE,cAAC,IAAD,CAAOvE,MAAO,IAAKkD,IAAK,IAAM6C,EAASM,oBACvC,uBACA,yCACA,cAAC,IAAD,CAAOrG,MAAO,IAAKkD,IAAK,IAAM6C,EAASO,kBACvC,uBACA,uBACA,yCACCP,EAASQ,gBAAkB,0DAA6BR,EAASQ,kBAClE,eAAC,IAAD,CAAQhB,aAAcQ,EAASQ,eAAgBd,SAAUe,EAAzD,UACE,cAACZ,EAAD,CAAQa,MAAM,IAAd,eACA,cAACb,EAAD,CAAQa,MAAM,IAAd,eACA,cAACb,EAAD,CAAQa,MAAM,IAAd,eACA,cAACb,EAAD,CAAQa,MAAM,IAAd,kBAEF,uBACA,uBACA,cAAC,IAAD,CAAQpE,QAAS,WAAOkC,IAAQyB,EAASU,OAAQ,EAAIR,EAAO,GAAKA,EAAO3B,EAAM,IAA9E,kBACA,cAAC,IAAD,CAAQlC,QAAS,WAAmB6D,EAAJ,IAAR3B,EAAmByB,EAASU,OAAQ,EAAYnC,EAAM,IAA9E,gCAIN,SAASiC,EAAcC,GACrBT,EAASzB,GAAKgC,eAAiBE,EAC/B1H,aAAaC,QAAQ,OAAQC,KAAKC,UAAU8G,M,SC1CnCW,EAAa,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC1B,OACE,qBACE7G,MAAO,CACL0B,QAAS,OACTC,eAAgB,WAChBC,QAAS,UACTC,WAAY,SACZC,gBAAiB,UACjB7B,MAAM,OACNiC,MAAM,SARV,SAWK2E,KCNIC,EAAO,WAAO,IAAD,EACYxD,mBAAS,WADrB,mBACjByD,EADiB,KACLC,EADK,KAGxB,SAASC,IACP,IAAMC,EAAKpC,YAAW5F,KAAK6F,MAAM/F,aAAagG,QAAQ,QAAQC,cAC3DC,IACGiC,EAAUnI,aAAagG,QAAQ,eACrCrG,IACGC,KADH,sBACuBsI,GAAM,CACzBvH,SAAUT,KAAK6F,MAAM/F,aAAagG,QAAQ,SAC1CmC,YAEDtI,MAAK,WACJE,OAAOM,SAAW,aAEnBG,OAAM,SAAC4E,GACN5D,QAAQC,IAAI2D,GACZtD,IAAQuD,MAAM,qCAGpB,IAAM+C,EAAU,SAAC,GAAuB,IAArBJ,EAAoB,EAApBA,cACjB,OACE,qBACEhH,MAAO,CACL0B,QAAQ,OACTC,eAAe,SACfE,WAAW,SACXwF,OAAO,SALV,SAOC,sBAAKtH,UAAU,MAAMC,MAAO,CAACsH,UAAU,UAAvC,UACC,mFACA,uBACA,cAAC,IAAD,CACEhF,QAAS,WACP0E,EAAc,eAFlB,uBAOA,uBACA,uBAEA,sEAKAO,EAAa,WACjB,OACE,qCACI,eAAC,EAAD,WACE,cAAC,IAAD,CACEC,KAAMtI,KAAK6F,MAAM/F,aAAagG,QAAQ,SAASyC,UAC/CC,WAAYT,IAEd,cAAC,IAAD,CAAQ9F,KAAK,SAASmB,QAAS2E,EAAYjH,MAAO,CAAC2H,WAAW,OAA9D,4BAIF,cAAC,EAAD,QAKR,OACE,8BACkB,YAAfZ,EAEC,cAACK,EAAD,CAASJ,cAAeA,IAExB,cAACO,EAAD,O,SCzEA1B,EAAWC,IAAXD,OAEK+B,EAAa,WAAO,IAAD,EACItE,qBADJ,mBACvBuE,EADuB,KACZC,EADY,OAEAxE,mBAAS,IAFT,mBAEzByE,EAFyB,KAEfC,EAFe,OAGM1E,mBAAS,IAHf,mBAGzB2E,EAHyB,KAGZC,EAHY,OAIY5E,qBAJZ,mBAIvB6E,EAJuB,KAIRC,EAJQ,OAKQ9E,mBAAS,IALjB,mBAKvB+E,EALuB,KAKVC,EALU,KAoB9B,SAASC,EAAeC,GACtB7J,IACGC,KAAK,gBAAiB,CACrB6J,IAAKD,EAAKE,cAAcD,MAEzB5J,MAAK,WACJ,IAAI8J,EAAQZ,EAASa,QAAQJ,EAAKE,cAAcD,KAChDV,EAASc,OAAOF,EAAO,GACvBX,EAAYD,MAEbvI,OAAM,SAAC4E,GAAD,OAAO5D,QAAQC,IAAI2D,MAvB9BF,qBAAU,WACRvF,IACGwF,IAAI,SAAU,CAAE2E,OAAQ,CAAEC,OAAQ,UAClClK,MAAK,SAACC,GACLgJ,EAAahJ,EAAIJ,MACjB8B,QAAQC,IAAI3B,EAAIJ,SAEjBc,OAAM,SAAC4E,GACNtD,IAAQuD,MAAM,gBACd7D,QAAQC,IAAI2D,QAEf,IA2BH,IAAM4E,EAAQ,CACZ3I,KAAM,OACN4I,aAAc,SAACT,GACb,IAAMU,EAAW,IAAIC,SAuBrB,OAtBAD,EAASE,OAAO,OAAQZ,GACxB7J,IACGC,KAAK,UAAWsK,EAAU,CACzBG,QAAS,CACP,eAAgB,yBAGnBxK,MAAK,SAACC,GACLgC,IAAQwI,QAAR,8BACAd,EAAKC,IAAM3J,EAAIJ,KAAK+J,IAGhBV,EAASpB,OAAS,GAAG4B,EAAeC,GAExCT,EAAW,CAACS,EAAKC,KACjBT,EAAYD,MAEbvI,OAAM,SAAC4E,GACN5D,QAAQC,IAAI2D,GACZtD,IAAQuD,MAAR,2BAGG,GAETkF,SAAUhB,GAENiB,EAAc,CAClBnJ,KAAM,OACN4I,aAAc,SAACT,GACb,IAAMU,EAAW,IAAIC,SAuBrB,OAtBAD,EAASE,OAAO,OAAQZ,GACxB7J,IACGC,KAAK,UAAWsK,EAAU,CACzBG,QAAS,CACP,eAAgB,yBAGnBxK,MAAK,SAACC,GACLgC,IAAQwI,QAAR,8BACAd,EAAKC,IAAM3J,EAAIJ,KAAK+J,IAGhBR,EAAYtB,OAAS,GAAGuB,EAAeM,GAE3CP,EAAc,CAACO,EAAKC,KACpBP,EAAeD,MAEhBzI,OAAM,SAAC4E,GACN5D,QAAQC,IAAI2D,GACZtD,IAAQuD,MAAR,2BAGG,GAETkF,SAvEF,SAAsBf,GACpB7J,IACGC,KAAK,gBAAiB,CACrB6J,IAAKD,EAAKE,cAAcD,MAEzB5J,MAAK,WACJ,IAAI8J,EAAQZ,EAASa,QAAQJ,EAAKE,cAAcD,KAChDV,EAASc,OAAOF,EAAO,GACvBX,EAAYD,MAEbvI,OAAM,SAAC4E,GAAD,OAAO5D,QAAQC,IAAI2D,QA+F9B,OACE,qCACA,cAAC,EAAD,IACE,cAAC,IAAD,CAAKlE,QAAQ,SAAb,SACE,cAAC,IAAD,UACG2H,GACC,qCACA,uBACA,6CACE,cAAC,IAAD,CACE4B,YAAU,EACVzJ,MAAO,CAAEC,MAAO,KAChBgB,YAAY,aACZyE,SAAU,SAACgE,GACTpB,EAAeoB,IAEjBC,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOjD,SAASkD,cAAcnB,QAAQiB,EAAME,gBAC5C,GAEFC,WAAY,SAACC,EAASC,GAAV,OACVD,EAAQpD,SACLkD,cACAI,cAAcD,EAAQrD,SAASkD,gBAftC,SAkBGlC,EAAUvD,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CAAQmC,MAAOnC,EAAEW,IAAjB,SAAuBX,EAAElE,YAG7B,uBACA,uBACA,iDACA,cAAC,IAAD,2BAAY2I,GAAZ,aACE,cAAC,IAAD,CAAQoB,KAAM,cAAChI,EAAA,EAAD,IAAd,gCAEF,uBACA,+CACA,cAAC,IAAD,2BAAYoH,GAAZ,aACE,cAAC,IAAD,CAAQY,KAAM,cAAChI,EAAA,EAAD,IAAd,gCAEF,uBACA,iDACA,cAAC,IAAD,CACEnB,YAAY,iBACZyE,SAAU,SAACtB,GACTgE,EAAiBhE,EAAEiG,OAAO3D,UAG9B,uBACA,uBACA,cAAC,IAAD,CAAQpE,QAnFpB,WACE,IAAMgI,EAAaxF,YACjB5F,KAAK6F,MAAM/F,aAAagG,QAAQ,QAAQC,cACxCC,IACIoB,EAAoByB,EAASwC,MAC7BhE,EAAkB0B,EAAYsC,MACd,OAAlBpC,GAA0C,KAAhBE,EAK9B1J,IACGC,KAAK,YAAa,CACjB0L,aACAhE,oBACAC,kBACA4B,gBACAhB,QAASkB,IAEVxJ,MAAK,SAACC,GACLgC,IAAQwI,QAAQ,yBAChBkB,YAAW,WACTzL,OAAOM,SAASmD,WACf,QAEJhD,OAAM,SAAC4E,GACNtD,IAAQuD,MAAM,gBACd7D,QAAQC,IAAI2D,MApBdtD,IAAQuD,MAAM,iBA4EuBlD,KAAK,UAAUsJ,MAAM,QAAlD,wC,SCjMDC,EAAgB,SAAC,GAAmC,IAAjCxF,EAAgC,EAAhCA,IAAIvB,EAA4B,EAA5BA,aAAayB,EAAe,EAAfA,SAAe,EAC9B9B,qBAD8B,mBACvD0C,EADuD,KAC7C2E,EAD6C,KAQ9D,OANAzG,qBAAU,WACRvF,IACGwF,IADH,oBACoBe,IACjBrG,MAAK,SAAC+L,GAAD,OAAcD,EAAYC,EAASlM,WAC1C,CAACwG,IAGF,cAAC,IAAD,CAAOE,SAAUA,EAAUV,QAASf,EAAckH,cAAe,CAACC,UAAU,GAA5E,SACE,cAAC,IAAD,UACG9E,GACD,eAAC,IAAD,WACE,cAAC,IAAD,CAAO7C,IAAK,IAAM6C,EAASM,oBAC3B,cAAC,IAAD,CAAOnD,IAAK,IAAM6C,EAASO,kBAC3B,uBACA,4BAAIP,EAASmC,wBCZV4C,EAAS,WAAO,IAAD,EACEzH,qBADF,mBACnB0H,EADmB,KACXC,EADW,OAEc3H,oBAAS,GAFvB,mBAEnBK,EAFmB,KAELC,EAFK,OAGUN,qBAHV,mBAGnB4H,EAHmB,KAGPC,EAHO,KAwB1B,OAnBAjH,qBAAU,WACRvF,IACGwF,IAAI,QAAS,CACZ2E,OAAQ,CACNsC,OAAQ,MACRC,EAAGC,YAAUpM,KAAK6F,MAAM/F,aAAagG,QAAQ,QAAQC,cAClDC,IACH6D,OAAQ,UACRwC,SAAU,aAGb1M,MAAK,SAAC2M,GAAD,OAAeP,EAAUO,EAAU9M,KAAK,GAAG+M,cAClD,IAEHvH,qBAAU,cAGP,CAAC8G,IAGF,qCACA,cAAC,EAAD,IACGA,GACC,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CACE/K,MAAO,QACPoH,OAAQ,QACRqE,UAAU,WACVC,OAAQ,gDACRjN,KAAM,CACJ,CAAC,WAAY,WACb,CAAC,kBAAmBsM,EAAO,GAAGY,iBAAiBjF,QAC/C,CAAC,gBAAiBqE,EAAO,GAAGa,eAAelF,SAE7CmF,QAAS,CACPlJ,MAAO,oBAETmJ,UAAW,CAAE,cAAe,SAGhC,eAAC,IAAD,WACoC,GAAlCf,EAAO,GAAGa,eAAelF,QAAc,iDACtCqE,EAAO,GAAGa,eAAevH,KAAI,SAACoF,EAAKnF,GAAN,OAC5B,mBACEjF,KAAK,IACLgD,QAAS,WACP6I,EAAczB,GACd9F,GAAgB,IAJpB,sCAOyBW,EAAI,QAG/B,uBACA,mDACA,uBACCyG,EAAO,GAAGY,iBAAiBtH,KAAI,SAACoF,EAAKnF,GAAN,OAC9B,qCACA,mBACEjF,KAAK,IACLgD,QAAS,WACP6I,EAAczB,GACd9F,GAAgB,IAJpB,wCAO2BW,EAAI,KAE/B,6BAGF,6BAIJ2G,GAAc,cAAC,EAAD,CAAevH,aAAcA,EAAcuB,IAAKgG,EAAY9F,SAAU,kBAAKxB,GAAgB,U,SC1EzGhE,EAAUC,IAAVD,MACaoM,IAAbC,SAiGOC,MA/Ff,WACE,IAAMC,EAAW,SAAC5L,GXFE,IAAC7B,KWGZ6B,EXFF5B,IACJC,KADI,uBACeF,IACnBG,MAAK,SAACC,GAEL,OADAE,aAAaC,QAAQ,MAAMC,KAAKC,UAAUL,EAAIJ,OACvCI,KAERU,OAAM,SAACC,GACN,OAAOA,MWLMZ,MAAK,WAClBE,OAAOM,SAASC,KAAO,QAqF3B,OACE,mCAhFE,qBAAKS,UAAU,sBAAf,SACE,cAAC,IAAD,CAAKC,MAAO,CAAEC,MAAO,QAAUC,QAAQ,SAAvC,SACE,cAAC,IAAD,CAAKC,GAAI,CAACC,KAAK,GAAf,SACE,sBAAKL,UAAU,iBAAf,UACE,cAAC,EAAD,sBACA,cAAC,IAAD,IACA,eAAC,IAAD,CACEM,KAAK,SACLN,UAAU,cACVO,SAAU6L,EACVzL,KAAK,QAJP,UAME,cAAC,IAAKC,KAAN,CACEN,KAAK,OACLO,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,4BALf,SASE,cAAC,IAAD,CACEC,OAAQ,cAACC,EAAA,EAAD,CAAcjB,UAAU,wBAChCkB,YAAY,WAGhB,cAAC,IAAKN,KAAN,CACEN,KAAK,QACLO,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BALf,SASE,cAAC,IAAD,CACEC,OACE,cAACqL,EAAA,EAAD,CAAkBrM,UAAU,wBAE9BkB,YAAY,eAGhB,cAAC,IAAKN,KAAN,CACEN,KAAK,WACLO,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gCALf,SASE,cAAC,IAAD,CACEC,OAAQ,cAACG,EAAA,EAAD,CAAcnB,UAAU,wBAChCoB,KAAK,WACLF,YAAY,eAIhB,eAAC,IAAKN,KAAN,WACE,cAAC,IAAD,CACEQ,KAAK,UACLC,SAAS,SACTrB,UAAU,oBACVsB,OAAK,EAJP,qBAQA,oBAAGrB,MAAO,CAAEsB,SAAU,SAAUC,UAAW,OAA3C,mCACwB,cAAC,IAAD,CAAMC,GAAG,IAAT,kBADxB,oCCzFL6K,GAAiB,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBzJ,EAAW,6BACnE,OACE,cAAC,IAAD,2BACMA,GADN,IAEE0J,OAAQ,SAACxD,GACP,OZAFhK,aAAagG,QAAQ,QAChB9F,KAAK6F,MAAM/F,aAAagG,QAAQ,SYAjCxE,QAAQC,IAAI,iBACL,cAAC6L,EAAD,eAAetD,KAGpB,cAAC,IAAD,CACExH,GAAI,CACFiL,SAAU,kBCJ1B9N,IAAM+N,SAASC,QAAU5N,OAAOM,SAASE,OACzCZ,IAAM+N,SAASrD,QAAQuD,OAAvB,2BAAoCjO,IAAM+N,SAASrD,QAAQuD,QAAW1N,KAAK6F,MAAM/F,aAAagG,QAAQ,SAkBvF6H,OAff,WAEE,OACE,eAAC,IAAD,WACE,cAAC,GAAD,CAAgBC,KAAK,IAAIC,OAAK,EAACR,UAAWlJ,IAC1C,cAAC,GAAD,CAAgByJ,KAAK,QAAQC,OAAK,EAACR,UAAWzF,IAC9C,cAAC,GAAD,CAAgBgG,KAAK,cAAcP,UAAW3E,IAC9C,cAAC,GAAD,CAAgBkF,KAAK,UAAUP,UAAWxB,IAC1C,cAAC,IAAD,CAAO+B,KAAK,UAAUP,UAAWS,IACjC,cAAC,IAAD,CAAOF,KAAK,UAAUP,UAAWzM,QCbxBmN,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtO,MAAK,YAAkD,IAA/CuO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASjB,OACP,cAAC,IAAMkB,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.60c05ed1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const authenticate = (data) => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\r\n  }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  if (localStorage.getItem(\"jwt\")) {\r\n    return JSON.parse(localStorage.getItem(\"jwt\"));\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const signup = (data) => {\r\n  return axios\r\n    .post(`/user`, { ...data })\r\n    .then((res) => {\r\n      localStorage.setItem(\"jwt\",JSON.stringify(res.data));\r\n      return res;\r\n    })\r\n    .catch((err) => {\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const signin = (data) => {\r\n  return axios\r\n    .post(`/login`, data)\r\n    .then((res) => {\r\n      authenticate(res.data);\r\n      //redirect to /\r\n      window.location.href = window.location.origin;\r\n    })\r\n    .catch((err) => {\r\n      if (err.request) {\r\n        return err.request;\r\n      } else if (err.response) {\r\n        return err.response;\r\n      } else {\r\n        return err;\r\n      }\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./signIn.css\";\r\nimport { Form, Input, Row, Col, Typography, Divider, Button } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\n\r\nimport { signin } from \"../../helper/auth\";\r\n\r\nconst { Title } = Typography;\r\nfunction SignIn() {\r\n  const onSubmit = (values) => {\r\n    signin(values).then((data) => {\r\n      console.log(data);\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"auth-page-container\">\r\n      <Row style={{ width: \"100%\" }} justify=\"center\">\r\n        <Col md={{ span: 8 }}>\r\n          <div className=\"auth-container\">\r\n            <Title>SIGN IN</Title>\r\n            <Divider />\r\n            <Form\r\n              name=\"login\"\r\n              className=\"login-form\"\r\n              onFinish={onSubmit}\r\n              size=\"large\"\r\n            >\r\n              <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your email!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"email\"\r\n                />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your Password!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"login-form-button\"\r\n                  block\r\n                >\r\n                  Sign In\r\n                </Button>\r\n                <p style={{ fontSize: \"1.1rem\", marginTop: \"5px\" }}>\r\n                  If you are new here, click <Link to=\"/signup\">here</Link> to\r\n                  register.\r\n                </p>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport { UploadOutlined, PieChartOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Navbar = () => {\r\n  return (\r\n    <nav\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        padding: \"5px 0px\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#9031e7\",\r\n      }}\r\n    >\r\n      <div className=\"flex\" style={{ flex: 1 }}>\r\n        <Link to=\"/\">\r\n          <p\r\n            style={{\r\n              margin: \"2px\",\r\n              paddingLeft: \"5px\",\r\n              fontSize: \"larger\",\r\n              color: \"whitesmoke\",\r\n            }}\r\n          >\r\n            Examiner\r\n          </p>\r\n        </Link>\r\n      </div>\r\n      <Link to=\"/contribute\">\r\n        <Button type=\"primary\" danger>\r\n          Contribute <UploadOutlined />\r\n        </Button>\r\n      </Link>\r\n      <Link to=\"/result\">\r\n        <Button type=\"primary\">\r\n          Report <PieChartOutlined />\r\n        </Button>\r\n      </Link>\r\n      <Button type=\"primary\" onClick={()=>{localStorage.removeItem(\"jwt\"); window.location.reload()}}>\r\n         SignOut\r\n        </Button>\r\n    </nav>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Card } from 'antd'\r\nconst { Meta } = Card;\r\nexport const SimpleCard = ({ title, totalQuestion,index,...rest }) => {\r\n    return (\r\n        <>\r\n            <Card\r\n            {...rest}\r\n                hoverable\r\n                style={{ width: 240,display:\"inline-block\",margin: \"30px\" }}\r\n                cover={<img alt=\"example\" src={`https://cdn.pixabay.com/photo/2017/10/03/20/30/book-2814026_1280.jpg`} />}\r\n            >\r\n                <Meta title={title} description={`total Question: ${totalQuestion}`} />\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { message, Form, TimePicker, Input, Modal } from \"antd\";\r\nimport {Navbar} from '../../components/navbar/navbar';\r\nimport { SimpleCard } from \"../../components/simpleCard/SimpleCard\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const Home = () => {\r\n  const [topic, setTopic] = useState();\r\n  const [modalData, setModalData] = useState();\r\n  const [modalvisible, setModalvisible] = useState(false);\r\n  const [testDuration, setTestDuration] = useState();\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/topic\")\r\n      .then((data) => setTopic(data.data))\r\n      .catch((e) => message.error(\"Fetch error\"));\r\n  }, []);\r\n\r\n  function handleCardClick(i) {\r\n    setModalData(i);\r\n    setModalvisible(true);\r\n  }\r\n\r\n  function modal() {\r\n    return (\r\n      <Modal\r\n        title=\"Create test\"\r\n        visible={modalvisible}\r\n        onOk={() => {\r\n          form.validateFields().then((values) => {\r\n            values.testDuration = testDuration;\r\n            //topic Id is modal._id\r\n            values.userId = jwt_decode(\r\n              JSON.parse(localStorage.getItem(\"jwt\")).ACCESS_TOKEN\r\n            )._id;\r\n            axios\r\n              .post(`/testByTopic/${modalData._id}`, values)\r\n              .then((test) => {\r\n                localStorage.setItem(\"test\", JSON.stringify(test.data));\r\n                localStorage.setItem(\"testTopicId\", modalData._id);\r\n                window.location.href = \"/test\";\r\n              })\r\n              .catch((e) => message.error(\"Test couldn't be created now!\"));\r\n          });\r\n        }}\r\n        onCancel={() => {\r\n          setModalvisible(false);\r\n        }}\r\n      >\r\n        <p>Due want to start your test now</p>\r\n\r\n        <p><b>Topic Name</b> - {modalData.name}</p>\r\n        <Form form={form} layout=\"vertical\">\r\n          <Form.Item\r\n            name=\"totalQuestion\"\r\n            label=\"total number of question\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please input the Number of Question!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input type=\"number\" min={1} defaultValue={1} />\r\n          </Form.Item>\r\n          <Form.Item name=\"description\" label=\"Duration\">\r\n            <TimePicker\r\n              format=\"hh:mm\"\r\n              onChange={(time, timestamp) => setTestDuration(timestamp)}\r\n            />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"padding\">\r\n        <Navbar />\r\n        {topic &&\r\n          topic.map((i, idx) => (\r\n            <SimpleCard\r\n              onClick={() => handleCardClick(i)}\r\n              title={i.name}\r\n              index={idx}\r\n              totalQuestion=\"20\"\r\n            />\r\n          ))}\r\n        {modalData && modal()}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Select, Button,Image } from \"antd\";\r\nconst { Option } = Select;\r\n\r\nexport const Testwidget = () => {\r\n  const [testData, setTestData] = useState();\r\n  const [idx, setIdx] = useState(0);\r\n  useEffect(() => {\r\n    setTestData(JSON.parse(localStorage.getItem(\"test\")).response);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Row justify=\"center\">\r\n        <Col span={{lg:16,sm: 24}}>{testData && renderQuestion(testData[idx])}</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n  function renderQuestion(question) {\r\n    return (\r\n      <>\r\n      <p>Question: </p>\r\n        <Image width={300} src={\"/\" + question.questionImageLink} />\r\n        <br/>\r\n        <p>Answer: </p>\r\n        <Image width={300} src={\"/\" + question.answerImageLink} />\r\n        <br/>\r\n        <br/>\r\n        <p>Choices:</p>\r\n        {question.expectedAnswer && <p>You previously selected: {question.expectedAnswer}</p>}\r\n        <Select defaultValue={question.expectedAnswer} onChange={selectChoices}>\r\n          <Option value=\"a\">A</Option>\r\n          <Option value=\"b\">B</Option>\r\n          <Option value=\"c\">C</Option>\r\n          <Option value=\"d\">D</Option>\r\n        </Select>\r\n        <br/>\r\n        <br/>\r\n        <Button onClick={() => {idx === testData.length -1 ? setIdx(0) : setIdx(idx + 1)}}>Next</Button>\r\n        <Button onClick={() => {idx === 0 ? setIdx(testData.length -1) : setIdx(idx - 1)}}>Previous</Button>\r\n      </>\r\n    );\r\n  }\r\n  function selectChoices(value) {\r\n    testData[idx].expectedAnswer = value;\r\n    localStorage.setItem(\"test\", JSON.stringify(testData));\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nexport const TestNavbar = ({children}) => {\r\n  return (\r\n    <nav\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        padding: \"5px 0px\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#9031e7\",\r\n        width:\"100%\",\r\n        color:\"white\"\r\n      }}\r\n    >\r\n        {children}\r\n    </nav>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { Testwidget } from \"../../components/testwidget/testwidget\";\r\nimport Countdown from \"react-countdown\";\r\nimport axios from \"axios\";\r\nimport { TestNavbar } from \"../../components/testNavbar/TestNavbar\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { message } from \"antd\";\r\n\r\nexport const Test = () => {\r\n  const [testScreen, setTestScreen] = useState(\"waiting\"); //only waiting and testWidget\r\n\r\n  function submitTest() {\r\n    const id = jwt_decode(JSON.parse(localStorage.getItem(\"jwt\")).ACCESS_TOKEN)\r\n      ._id;\r\n    const topicId = localStorage.getItem(\"testTopicId\");\r\n    axios\r\n      .post(`/submitTest/${id}`, {\r\n        response: JSON.parse(localStorage.getItem(\"test\")),\r\n        topicId,\r\n      })\r\n      .then(() => {\r\n        window.location = \"/result\";\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        message.error(\"Test couldn't be submitted now\");\r\n      });\r\n  }\r\n  const Waiting = ({ setTestScreen }) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display:\"flex\",\r\n         justifyContent:\"center\",\r\n         alignItems:\"center\",\r\n         height:\"100vh\"\r\n        }}\r\n      ><div className=\"div\" style={{textAlign:\"center\"}}>\r\n        <p>Prepare yourself for test and then click start now</p>\r\n        <br/>\r\n        <Button\r\n          onClick={() => {\r\n            setTestScreen(\"testWidget\");\r\n          }}\r\n        >\r\n          Start now\r\n        </Button>\r\n        <br/>\r\n        <br/>\r\n\r\n        <p>*you can click on image to zoom</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const TestWidget = () => {\r\n    return (\r\n      <>\r\n          <TestNavbar>\r\n            <Countdown\r\n              date={JSON.parse(localStorage.getItem(\"test\")).startTime}\r\n              onComplete={submitTest}\r\n            />\r\n            <Button type=\"danger\" onClick={submitTest} style={{marginLeft:\"5px\"}}>\r\n              Submit Test\r\n            </Button>\r\n          </TestNavbar>\r\n          <Testwidget />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {testScreen === \"waiting\" ? (\r\n        //loading screen\r\n        <Waiting setTestScreen={setTestScreen} />\r\n      ) : (\r\n        <TestWidget />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, message, Upload, Button, Input, Select } from \"antd\";\r\nimport axios from \"axios\";\r\nimport {Navbar} from \"../../components/navbar/navbar\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport jwt_decode from \"jwt-decode\";\r\nconst { Option } = Select;\r\n\r\nexport const Contribute = () => {\r\n  const [topicname, setTopicName] = useState();\r\n  let [uploaded, setUploaded] = useState([]);\r\n  let [ansuploaded, ansSetUploaded] = useState([]);\r\n  const [correctAnswer, setcorrectChoice] = useState();\r\n  const [selectTopic, setSelectTopic] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/topic\", { params: { fields: \"name\" } })\r\n      .then((res) => {\r\n        setTopicName(res.data);\r\n        console.log(res.data);\r\n      })\r\n      .catch((e) => {\r\n        message.error(\"server error\");\r\n        console.log(e);\r\n      });\r\n  }, []);\r\n\r\n  function questionRemove(file) {\r\n    axios\r\n      .post(\"/removeupload\", {\r\n        key: file.originFileObj.key,\r\n      })\r\n      .then(() => {\r\n        var start = uploaded.indexOf(file.originFileObj.key);\r\n        uploaded.splice(start, 1);\r\n        setUploaded(uploaded);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }\r\n  function answerRemove(file) {\r\n    axios\r\n      .post(\"/removeupload\", {\r\n        key: file.originFileObj.key,\r\n      })\r\n      .then(() => {\r\n        var start = uploaded.indexOf(file.originFileObj.key);\r\n        uploaded.splice(start, 1);\r\n        setUploaded(uploaded);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    beforeUpload: (file) => {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      axios\r\n        .post(\"/upload\", formData, {\r\n          headers: {\r\n            \"content-type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          message.success(`file uploaded successfully`);\r\n          file.key = res.data.key;\r\n\r\n          //upload only one file\r\n          if (uploaded.length > 0) questionRemove(file);\r\n\r\n          uploaded = [file.key];\r\n          setUploaded(uploaded);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          message.error(`file upload failed.`);\r\n        });\r\n\r\n      return false;\r\n    },\r\n    onRemove: questionRemove,\r\n  };\r\n  const answerprops = {\r\n    name: \"file\",\r\n    beforeUpload: (file) => {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      axios\r\n        .post(\"/upload\", formData, {\r\n          headers: {\r\n            \"content-type\": \"multipart/form-data\",\r\n          },\r\n        })\r\n        .then((res) => {\r\n          message.success(`file uploaded successfully`);\r\n          file.key = res.data.key;\r\n\r\n          //upload only one file\r\n          if (ansuploaded.length > 0) ansSetUploaded(file);\r\n\r\n          ansuploaded = [file.key];\r\n          ansSetUploaded(ansuploaded);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          message.error(`file upload failed.`);\r\n        });\r\n\r\n      return false;\r\n    },\r\n    onRemove: answerRemove,\r\n  };\r\n\r\n  function submitQues() {\r\n    const uploadedBy = jwt_decode(\r\n      JSON.parse(localStorage.getItem(\"jwt\")).ACCESS_TOKEN\r\n    )._id;\r\n    const questionImageLink = uploaded.pop();\r\n    const answerImageLink = ansuploaded.pop();\r\n    if (correctAnswer === null || selectTopic === \"\") {\r\n      message.error(\"Enter Choice\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"/question\", {\r\n        uploadedBy,\r\n        questionImageLink,\r\n        answerImageLink,\r\n        correctAnswer,\r\n        topicId: selectTopic,\r\n      })\r\n      .then((res) => {\r\n        message.success(\"Successfully uploaded\");\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 1000);\r\n      })\r\n      .catch((e) => {\r\n        message.error(\"server error\");\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          {topicname && (\r\n            <>\r\n            <br/>\r\n            <p  >Topic Name :</p>\r\n              <Select\r\n                showSearch\r\n                style={{ width: 200 }}\r\n                placeholder=\"Topic name\"\r\n                onChange={(val) => {\r\n                  setSelectTopic(val);\r\n                }}\r\n                optionFilterProp=\"children\"\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                  optionA.children\r\n                    .toLowerCase()\r\n                    .localeCompare(optionB.children.toLowerCase())\r\n                }\r\n              >\r\n                {topicname.map((i) => (\r\n                  <Option value={i._id}>{i.name}</Option>\r\n                ))}\r\n              </Select>\r\n              <br />\r\n              <br/>\r\n              <p>Question Image :</p>\r\n              <Upload {...props}>\r\n                <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n              </Upload>\r\n              <br />\r\n              <p>Answer Image :</p>\r\n              <Upload {...answerprops}>\r\n                <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n              </Upload>\r\n              <br />\r\n              <p>Correct Answer :</p>\r\n              <Input\r\n                placeholder=\"Correct Option\"\r\n                onChange={(e) => {\r\n                  setcorrectChoice(e.target.value);\r\n                }}\r\n              ></Input>\r\n              <br/>\r\n              <br/>\r\n              <Button onClick={submitQues} type=\"primary\" shape=\"round\">Submit Question</Button>\r\n            </>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Modal, Row ,Image} from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nexport const QuestionModel = ({ _id,modalvisible,onCancel }) => {\r\n  const [question, setQuestion] = useState();\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/question/${_id}`)\r\n      .then((axiosRes) => setQuestion(axiosRes.data));\r\n  }, [_id]);\r\n\r\n  return (\r\n    <Modal onCancel={onCancel} visible={modalvisible} okButtonProps={{disabled: true}} >\r\n      <Row>\r\n        {question && \r\n        <Col>\r\n          <Image src={\"/\" + question.questionImageLink} />\r\n          <Image src={\"/\" + question.answerImageLink} />\r\n          <br/>\r\n          <p>{question.correctAnswer}</p>\r\n        </Col>\r\n        }\r\n      </Row>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport axios from \"axios\";\r\nimport { Row, Col } from \"antd\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport {Navbar} from '../../components/navbar/navbar';\r\nimport { QuestionModel } from \"../../components/showQuestionModel/QuestionModel\";\r\n\r\nexport const Report = () => {\r\n  const [report, setReport] = useState();\r\n  const [modalvisible, setModalvisible] = useState(false);\r\n  const [questionId, setQuestionId] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/user\", {\r\n        params: {\r\n          search: \"_id\",\r\n          q: jwtDecode(JSON.parse(localStorage.getItem(\"jwt\")).ACCESS_TOKEN)\r\n            ._id,\r\n          fields: \"reports\",\r\n          populate: \"reports\",\r\n        },\r\n      })\r\n      .then((axiosdata) => setReport(axiosdata.data[0].reports));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!report) return;\r\n    \r\n  }, [report]);\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n      {report && (\r\n        <Row>\r\n          <Col>\r\n            <Chart\r\n              width={\"500px\"}\r\n              height={\"300px\"}\r\n              chartType=\"PieChart\"\r\n              loader={<div>Loading Chart</div>}\r\n              data={[\r\n                [\"Question\", \"Numbers\"],\r\n                [\"IncorrectAnswer\", report[0].incorrectAnswers.length],\r\n                [\"CorrectAnswer\", report[0].correctAnswers.length],\r\n              ]}\r\n              options={{\r\n                title: \"Your last report\",\r\n              }}\r\n              rootProps={{ \"data-testid\": \"1\" }}\r\n            />\r\n          </Col>\r\n          <Col>\r\n           {report[0].correctAnswers.length !=0 && <p>Correct Answer: </p>} \r\n            {report[0].correctAnswers.map((val, i) => (\r\n              <a\r\n                href=\"#\"\r\n                onClick={() => {\r\n                  setQuestionId(val);\r\n                  setModalvisible(true);\r\n                }}\r\n              >\r\n                {`correct question : ${i + 1}`}\r\n              </a>\r\n            ))}\r\n            <br />\r\n            <p>Incorrect Answer: </p>\r\n            <br />\r\n            {report[0].incorrectAnswers.map((val, i) => (\r\n              <>\r\n              <a\r\n                href=\"#\"\r\n                onClick={() => {\r\n                  setQuestionId(val);\r\n                  setModalvisible(true);\r\n                }}\r\n              >\r\n                {`incorrect question : ${i + 1}`}\r\n              </a>\r\n              <br/>\r\n              </>   \r\n            ))}\r\n            <br />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      { questionId && <QuestionModel modalvisible={modalvisible} _id={questionId} onCancel={()=> setModalvisible(false)} />}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nimport \"../Signin/signIn.css\";\r\n\r\nimport { Form, Input, Row, Col, Typography, Divider, Button } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  LockOutlined,\r\n  SolutionOutlined\r\n} from \"@ant-design/icons\";\r\n\r\nimport { signup } from \"../../helper/auth\";\r\n\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nfunction SignUp() {\r\n  const onSubmit = (values) => {\r\n    signup(values).then(() => {\r\n      window.location.href = \"/\";\r\n    });\r\n  };\r\n\r\n  const signupform = () => {\r\n    return (\r\n      <div className=\"auth-page-container\">\r\n        <Row style={{ width: \"100%\" }} justify=\"center\">\r\n          <Col md={{span:8}}>\r\n            <div className=\"auth-container\">\r\n              <Title>SIGN UP</Title>\r\n              <Divider />\r\n              <Form\r\n                name=\"signUp\"\r\n                className=\"signup-form\"\r\n                onFinish={onSubmit}\r\n                size=\"large\"\r\n              >\r\n                <Form.Item\r\n                  name=\"name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Name!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    placeholder=\"Name\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Email!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={\r\n                      <SolutionOutlined className=\"site-form-item-icon\" />\r\n                    }\r\n                    placeholder=\"Username\"\r\n                  />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please input your Password!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    block\r\n                  >\r\n                    Sign Up\r\n                  </Button>\r\n                  <p style={{ fontSize: \"1.1rem\", marginTop: \"5px\" }}>\r\n                    Already a User? Click <Link to=\"/\">here</Link> to Sign In.\r\n                  </p>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {signupform()}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"../helper/auth\";\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (isAuthenticated()) {\r\n          console.log(\"authenticated\");\r\n          return <Component {...props} />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/signin\",\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css'; \nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport SignIn from './components/Signin/SignIn'\nimport {Home} from './Screens/home/home';\nimport {Test} from './Screens/test/test';\nimport {Contribute} from './Screens/contribute/Contribute'; \nimport {Report} from './Screens/reports/Report'; \nimport Signup from './components/Signup/SignUp'\nimport {ProtectedRoute} from './components/protectedRoute'\nimport axios from 'axios';\naxios.defaults.baseURL = window.location.origin;\naxios.defaults.headers.common = {...axios.defaults.headers.common, ...JSON.parse(localStorage.getItem(\"jwt\"))}\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <ProtectedRoute path=\"/\" exact component={Home}/>\n      <ProtectedRoute path=\"/test\" exact component={Test}/>\n      <ProtectedRoute path=\"/contribute\" component={Contribute}/>\n      <ProtectedRoute path=\"/result\" component={Report}/>\n      <Route path=\"/signup\" component={Signup}/>\n      <Route path=\"/signin\" component={SignIn} />\n\n    </Router >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}